{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","ShowNames","namesToShow","setSucceedMessage","setPersons","persons","map","person","name","number","onClick","window","confirm","personService","setTimeout","Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Notification","message","includes","className","App","useState","setNewName","setNewNumber","showAll","setShowAll","setNewFilter","succeedMessage","useEffect","console","log","length","filter","toLowerCase","event","target","preventDefault","nameInList","find","nameObject","undefined","createdPerson","concat","catch","error","updatedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d4fb198.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n  }\r\n\r\nconst update = (id, newObject) => {    \r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  del: del, \r\n  update: update \r\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './index.css'\n\n\nconst ShowNames = ({namesToShow, setSucceedMessage, persons, setPersons}) => {\n  return (\n    <div>\n      {namesToShow.map(person => \n          <div key={person.id}>\n        {person.name} {person.number}\n        <button onClick={() => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n        personService\n        .del(person.id)\n        personService\n        .getAll()\n          .then(persons => {\n          setPersons(persons)\n      })\n        setSucceedMessage(\n          `Deleted ${person.name}`\n        )\n        setTimeout(() => {\n          setSucceedMessage(null)\n        }, 2000)}}}\n        >delete</button>\n        </div>\n        )}\n    </div>\n  )}\n\n  const Filter = ({newFilter, handleFilterChange}) => {\n    return(\n      <div>\n      filter shown with <input \n                  value={newFilter}\n                  onChange={handleFilterChange}/>\n      </div>\n    )\n  }\n\n  const PersonForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange}) => {\n    return(\n      <form onSubmit={addName}>\n          name: <input \n                  value={newName}\n                  onChange={handleNameChange}\n                  />\n          number: <input \n                  value={newNumber}\n                  onChange={handleNumberChange}\n                  />\n          <button type=\"submit\">add</button>\n      </form>\n    )\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    if ((message.includes(\"Information\")) || (message.includes(\"validation\"))) {\n      return(\n        <div className=\"error\">\n        {message}\n      </div>\n      )\n    }\n    return (\n      <div className=\"succeed\">\n        {message}\n      </div>\n    )\n  }\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ newFilter, setNewFilter ] = useState(\"\")\n  const [ succeedMessage, setSucceedMessage ] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(persons => {\n        console.log('promise fulfilled')\n        setPersons(persons)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameInList = persons.find(person => person.name === newName)\n    console.log(nameInList)\n    const nameObject = {\n      name : newName,\n      number : newNumber,\n      id : newName,    \n  }\n\n    if (nameInList === undefined) {\n    personService\n      .create(nameObject)\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        console.log(createdPerson)\n        setNewName(\"\")\n        setNewNumber(\"\")\n      \n        setSucceedMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setSucceedMessage(null)\n        }, 5000)      \n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setSucceedMessage(error.response.data.error)\n        setTimeout(() => {\n          setSucceedMessage(null)\n        }, 5000)\n      })\n    }\n\n    else if (window.confirm(`${nameObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n      personService\n      .update(nameInList.id, nameObject)\n      .then(updatedPerson => {\n        setPersons(persons.map(person => person.id === nameInList.id ? updatedPerson : person)) \n        setNewName(\"\")\n        setNewNumber(\"\")\n        setSucceedMessage(\n          `Changed ${newName}`\n        )\n        setTimeout(() => {\n          setSucceedMessage(null)\n        }, 5000)   \n      })\n      .catch(error => {\n        setSucceedMessage(\n        `Information of ${newName} has already been removed from server`\n      )\n      setTimeout(() => {\n        setSucceedMessage(null)\n      }, 5000)\n      })         \n  }  \n}\n  \n\n  const namesToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n    console.log(namesToShow)\n            \n    \n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n    if (event.target.value.length === 0) {\n      setShowAll(true)\n    }\n    else (setShowAll(false))\n  }\n\n\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={succeedMessage} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h2>Add a new</h2>\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2> \n      <ShowNames namesToShow={namesToShow} setSucceedMessage={setSucceedMessage} persons={persons} setPersons={setPersons}/> \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}